/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Cl.Burgos.Juegos.GUI;

import Cl.Burgos.Juegos.DAO.DAOPc;
import Cl.Burgos.Juegos.DAO.DAOPs2;
import Cl.Burgos.Juegos.DAO.DAOPs3;
import Cl.Burgos.Juegos.DAO.DAOPs4;
import Cl.Burgos.Juegos.DAO.DAOPsp;
import Cl.Burgos.Juegos.DAO.DAOPsx;
import Cl.Burgos.Juegos.ENT.ClPc;
import Cl.Burgos.Juegos.ENT.ClPs2;
import Cl.Burgos.Juegos.ENT.ClPs3;
import Cl.Burgos.Juegos.ENT.ClPs4;
import Cl.Burgos.Juegos.ENT.ClPsp;
import Cl.Burgos.Juegos.ENT.ClPsx;
import Cl.Burgos.Juegos.FUN.DescargarIMGAll;
import Cl.Burgos.Juegos.FUN.Directorio;
import static Cl.Burgos.Juegos.FUN.Directorio.selecDirectrorio;
import Cl.Burgos.Juegos.FUN.HiloPasos;
import Cl.Burgos.Juegos.Main.ApliJuegos;
import java.awt.Color;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.awt.image.RenderedImage;
import java.io.ByteArrayInputStream;
import java.io.File;
import java.io.IOException;
import java.io.InputStream;
import java.util.List;
import java.util.StringTokenizer;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JLayeredPane;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
//import javax.swing.JProgressBar;
//import jdk.nashorn.internal.ir.BreakNode;

/**
 *
 * @author march
 */
public class FrDescargarImg extends javax.swing.JFrame {

    DescargarIMGAll all = new DescargarIMGAll();
    DAOPsx dAOPsx = new DAOPsx();
    DAOPs2 dAOPs2 = new DAOPs2();
    DAOPsp dAOPsp = new DAOPsp();
    DAOPs3 dAOPs3 = new DAOPs3();
    DAOPs4 dAOPs4 = new DAOPs4();
    DAOPc dAOPc = new DAOPc();
//    String url = ApliJuegos.Url+"\\IMG\\";
    String url;
    int cantPSX,cantPS2,cantPSP,cantPS3,cantPS4,cantPC,All;
    static String carpeta1 = "IMG";
    static String carpeta2 = "PSX";
    static String carpeta3 = "PS2";
    static String carpeta4 = "PSP";
    static String carpeta5 = "PS3";
    static String carpeta6 = "PC";
    static String carpeta7 = "PS4";
    /**
     * Creates new form FrDescargarImg
     */
    public FrDescargarImg() {
        initComponents();
        
        url =selecDirectrorio();
        crearDirec(url);
        url=url+"/IMG/";
        jPanel1.setOpaque(false);
        setLocationRelativeTo(null); 
        setResizable(false); 
        setTitle("Descargas de Imagenes");
        String url="/Cl/Burgos/Juegos/IMG/";
        setIconImage(new ImageIcon(getClass().getResource(url+"Icono.png")).getImage());
        ((JPanel)getContentPane()).setOpaque(false);
        ImageIcon MyImgCustom =new ImageIcon(this.getClass().getResource(url+"fondo1.jpg"));
        JLabel fondo= new JLabel();
        
        fondo.setIcon(MyImgCustom);
        getLayeredPane().add(fondo,JLayeredPane.FRAME_CONTENT_LAYER);
        fondo.setBounds(0,0,MyImgCustom.getIconWidth(),MyImgCustom.getIconHeight());
        
        All=TotalJuegos();
        TotalPSX.setText("Total "+cantPSX);
        TotalPS2.setText("Total "+cantPS2);
        TotalPSP.setText("Total "+cantPSP);
        TotalPS3.setText("Total "+cantPS3);
        TotalPS4.setText("Total "+cantPS4);
        TotalPC.setText("Total "+cantPC);
        TotalAll.setText("Total "+All);
    }

    public static void crearDirec(String url){
        crearDirec(url,carpeta1);
        crearDirec(url+"/"+carpeta1, carpeta2);
        crearDirec(url+"/"+carpeta1, carpeta3);
        crearDirec(url+"/"+carpeta1, carpeta4);
        crearDirec(url+"/"+carpeta1, carpeta5);
        crearDirec(url+"/"+carpeta1, carpeta6);
        crearDirec(url+"/"+carpeta1, carpeta7);
    }
    public static void crearDirec(String url,String carpeta){
        File directorio = new File(url +"/"+ carpeta );
        if (!directorio.exists()) {
            if (directorio.mkdirs()) {
                System.out.println("Directorio creado");
            } else {
                System.out.println("Error al crear directorio");
            }
        }
    }
    
    public int TotalJuegos(){
        cantPSX=dAOPsx.CuantosTotal();
        cantPS2=dAOPs2.CuantosTotal();
        cantPSP=dAOPsp.CuantosTotal();
        cantPS3=dAOPs3.CuantosTotal();
        cantPC=dAOPc.CuantosTotal();
        int resp = cantPSX+cantPS2+cantPSP+cantPS3+cantPC;
        return resp;
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        DescargaPSX = new javax.swing.JLabel();
        TotalPSX = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        TotalPS2 = new javax.swing.JLabel();
        DescargaPS2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        TotalPSP = new javax.swing.JLabel();
        DescargaPSP = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        TotalPS3 = new javax.swing.JLabel();
        DescargaPS3 = new javax.swing.JLabel();
        jProgressBar1 = new javax.swing.JProgressBar();
        jButton5 = new javax.swing.JButton();
        TotalAll = new javax.swing.JLabel();
        DescargaAll = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jButton6 = new javax.swing.JButton();
        TotalPC = new javax.swing.JLabel();
        DescargaPC = new javax.swing.JLabel();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        jButton11 = new javax.swing.JButton();
        jButton12 = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jButton13 = new javax.swing.JButton();
        TotalPS4 = new javax.swing.JLabel();
        DescargaPS4 = new javax.swing.JLabel();
        jButton14 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setText("Descargar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("Imagenes de PSX:");

        DescargaPSX.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        DescargaPSX.setText("Descargados");

        TotalPSX.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        TotalPSX.setText("Total ");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("Imagenes de PS2:");

        jButton2.setText("Descargar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        TotalPS2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        TotalPS2.setText("Total ");

        DescargaPS2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        DescargaPS2.setText("Descargados");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("Imagenes de PSP:");

        jButton3.setText("Descargar");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        TotalPSP.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        TotalPSP.setText("Total ");

        DescargaPSP.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        DescargaPSP.setText("Descargados");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setText("Imagenes de PS3:");

        jButton4.setText("Descargar");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        TotalPS3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        TotalPS3.setText("Total ");

        DescargaPS3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        DescargaPS3.setText("Descargados");

        jProgressBar1.setStringPainted(true);

        jButton5.setText("Descargar");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        TotalAll.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        TotalAll.setText("Total ");

        DescargaAll.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        DescargaAll.setText("Descargados");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel6.setText("Imagenes en Total:");

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel7.setText("Imagenes de PC:");

        jButton6.setText("Descargar");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        TotalPC.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        TotalPC.setText("Total ");

        DescargaPC.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        DescargaPC.setText("Descargados");

        jButton7.setText("Crear PDF PSX");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jButton8.setText("Crear PDF PS2");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jButton9.setText("Crear PDF PSP");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        jButton10.setText("Crear PDF PS3");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        jButton11.setText("Crear PDF PC");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });

        jButton12.setText("Atras");
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel8.setText("Imagenes de PS4:");

        jButton13.setText("Descargar");
        jButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton13ActionPerformed(evt);
            }
        });

        TotalPS4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        TotalPS4.setText("Total ");

        DescargaPS4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        DescargaPS4.setText("Descargados");

        jButton14.setText("Crear PDF PS4");
        jButton14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton14ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jProgressBar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel2)
                            .addComponent(jLabel7)
                            .addComponent(jLabel8))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jButton6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(TotalPC))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jButton5)
                                    .addComponent(jButton4)
                                    .addComponent(jButton3)
                                    .addComponent(jButton2)
                                    .addComponent(jButton1)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(10, 10, 10)
                                        .addComponent(jButton12))
                                    .addComponent(jButton13))
                                .addGap(34, 34, 34)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(TotalAll, javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(TotalPS3, javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(TotalPS4, javax.swing.GroupLayout.Alignment.TRAILING))
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(TotalPSX)
                                        .addComponent(TotalPS2, javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(TotalPSP, javax.swing.GroupLayout.Alignment.TRAILING)))))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(30, 30, 30)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(DescargaPSX)
                                    .addComponent(DescargaPS2)
                                    .addComponent(DescargaPSP)
                                    .addComponent(DescargaPS3)
                                    .addComponent(DescargaAll)
                                    .addComponent(DescargaPS4)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGap(24, 24, 24)
                                .addComponent(DescargaPC)))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton7)
                            .addComponent(jButton8)
                            .addComponent(jButton9)
                            .addComponent(jButton10)
                            .addComponent(jButton11)
                            .addComponent(jButton14))
                        .addGap(0, 84, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jButton1)
                    .addComponent(TotalPSX)
                    .addComponent(DescargaPSX)
                    .addComponent(jButton7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jButton2)
                    .addComponent(TotalPS2)
                    .addComponent(DescargaPS2)
                    .addComponent(jButton8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jButton3)
                    .addComponent(TotalPSP)
                    .addComponent(DescargaPSP)
                    .addComponent(jButton9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jButton4)
                    .addComponent(TotalPS3)
                    .addComponent(DescargaPS3)
                    .addComponent(jButton10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jButton13)
                    .addComponent(TotalPS4)
                    .addComponent(DescargaPS4)
                    .addComponent(jButton14))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jButton6)
                    .addComponent(TotalPC)
                    .addComponent(DescargaPC)
                    .addComponent(jButton11))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton5)
                    .addComponent(TotalAll)
                    .addComponent(DescargaAll)
                    .addComponent(jLabel6))
                .addGap(9, 9, 9)
                .addComponent(jButton12)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jProgressBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        BarraProgreso(0, 0, cantPSX, 10);
        DAOPsx dAOPsx = new DAOPsx();
        String nombre = null;
        Image img = null;
        int numPSX=0;
        try {
            List<ClPsx> datosCliente = dAOPsx.leerPsx();
            for (int i = 0; i < datosCliente.size(); i++) {
                numPSX=i;
                nombre = datosCliente.get(i).getCodigo() + ".jpg";
                byte[] bi = datosCliente.get(i).getImagen();
                BufferedImage image = null;
                InputStream in = new ByteArrayInputStream(bi);
                image = ImageIO.read(in);
                img = image;
                String aux = nombre;
                StringTokenizer token = new StringTokenizer(aux, ".");
                token.nextToken();
                String formato = token.nextToken();
                ImageIO.write((RenderedImage) img, formato, new File(url+"PSX" + "\\" + nombre));
            }
            DescargaPSX.setText("Descargados "+Integer.toString(numPSX+1));
            JOptionPane.showMessageDialog(null, "Total De Juegos PSX descargados "+Integer.toString(numPSX+1));
        } catch (Exception ex) {
            System.out.println(ex.getMessage());
//                Logger.getLogger(FrHome.class.getName()).log(Level.SEVERE, null, ex);
        }
        
//        JOptionPane.showMessageDialog(null, cantidad);
//        System.exit(0);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        BarraProgreso(0, 0, cantPS2, 10);
        DAOPs2 dAOPs2 = new DAOPs2();
        String nombre = null;
        Image img = null;
        int numPS2=0;
        try {
            List<ClPs2> datosCliente = dAOPs2.leerPs2();
            
            for (int i = 0; i < datosCliente.size(); i++) {
//                id = Integer.parseInt(String.valueOf(datosCliente.get(i).getId()));
//                nombre=datosCliente.get(i).getCodigo()+"-"+datosCliente.get(i).getNombre()+".png";
                numPS2=i;
                nombre = datosCliente.get(i).getCodigo() + ".jpg";
                byte[] bi = datosCliente.get(i).getImagen();
                BufferedImage image = null;
                InputStream in = new ByteArrayInputStream(bi);
                image = ImageIO.read(in);
                img = image;
                String aux = nombre;
                StringTokenizer token = new StringTokenizer(aux, ".");
                token.nextToken();
                String formato = token.nextToken();
                ImageIO.write((RenderedImage) img, formato, new File(url+"PS2" + "\\" + nombre));
            }
            DescargaPS2.setText("Descargados "+Integer.toString(numPS2+1));
            JOptionPane.showMessageDialog(null, "Total De Juegos PS2 descargados "+Integer.toString(numPS2+1));
        } catch (Exception ex) {
            System.out.println(ex.getMessage());
//                Logger.getLogger(FrHome.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        BarraProgreso(0, 0, cantPSP, 10);
        DAOPsp dAOPsp = new DAOPsp();
        String nombre = null;
        Image img = null;
        int numPSP=0;
        try {
            List<ClPsp> datosCliente = dAOPsp.leerPsp();
            
            for (int i = 0; i < datosCliente.size(); i++) {
//                id = Integer.parseInt(String.valueOf(datosCliente.get(i).getId()));
//                nombre=datosCliente.get(i).getCodigo()+"-"+datosCliente.get(i).getNombre()+".png";
                numPSP=i;
                nombre = datosCliente.get(i).getCodigo() + ".jpg";
                byte[] bi = datosCliente.get(i).getImagen();
                BufferedImage image = null;
                InputStream in = new ByteArrayInputStream(bi);
                image = ImageIO.read(in);
                img = image;
                String aux = nombre;
                StringTokenizer token = new StringTokenizer(aux, ".");
                token.nextToken();
                String formato = token.nextToken();
                ImageIO.write((RenderedImage) img, formato, new File(url+"PSP" + "\\" + nombre));
            }
            DescargaPSP.setText("Descargados "+Integer.toString(numPSP+1));
            JOptionPane.showMessageDialog(null, "Total De Juegos PSP descargados "+Integer.toString(numPSP+1));
        } catch (Exception ex) {
            System.out.println(ex.getMessage());
//                Logger.getLogger(FrHome.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        BarraProgreso(0, 0, cantPS3, 10);
        DAOPs3 dAOPs3 = new DAOPs3();
        String nombre = null;
        Image img = null;
        int numPS3=0;
        try {
            List<ClPs3> datosCliente = dAOPs3.leerPs3();
            
            for (int i = 0; i < datosCliente.size(); i++) {
//                id = Integer.parseInt(String.valueOf(datosCliente.get(i).getId()));
//                nombre=datosCliente.get(i).getCodigo()+"-"+datosCliente.get(i).getNombre()+".png";
                numPS3=i;
                nombre = datosCliente.get(i).getCodigo() + ".jpg";
                byte[] bi = datosCliente.get(i).getImagen();
                BufferedImage image = null;
                InputStream in = new ByteArrayInputStream(bi);
                image = ImageIO.read(in);
                img = image;
                String aux = nombre;
                StringTokenizer token = new StringTokenizer(aux, ".");
                token.nextToken();
                String formato = token.nextToken();
                ImageIO.write((RenderedImage) img, formato, new File(url+"PS3" + "\\" + nombre));
            }
            DescargaPS3.setText("Descargados "+Integer.toString(numPS3+1));
            JOptionPane.showMessageDialog(null, "Total De Juegos PS3 descargados "+Integer.toString(numPS3+1));
        } catch (Exception ex) {
            System.out.println(ex.getMessage());
//                Logger.getLogger(FrHome.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        BarraProgreso(0, 0, cantPSX, 10);
        DAOPsx dAOPsx = new DAOPsx();
        String nombre = null;
        Image img = null;
        int numPSX=0;
        try {
            List<ClPsx> datosCliente = dAOPsx.leerPsx();
            for (int i = 0; i < datosCliente.size(); i++) {
                numPSX=i;
                nombre = datosCliente.get(i).getCodigo() + ".jpg";
                byte[] bi = datosCliente.get(i).getImagen();
                BufferedImage image = null;
                InputStream in = new ByteArrayInputStream(bi);
                image = ImageIO.read(in);
                img = image;
                String aux = nombre;
                StringTokenizer token = new StringTokenizer(aux, ".");
                token.nextToken();
                String formato = token.nextToken();
                ImageIO.write((RenderedImage) img, formato, new File(url+"PSX" + "\\" + nombre));
            }
            DescargaPSX.setText("Descargados "+Integer.toString(numPSX+1));
//            JOptionPane.showMessageDialog(null, "Total De Juegos PSX descargados "+Integer.toString(numPSX+1));
        } catch (Exception ex) {
            System.out.println(ex.getMessage());
//                Logger.getLogger(FrHome.class.getName()).log(Level.SEVERE, null, ex);
        }
        BarraProgreso(0, 0, cantPS2, 10);
        DAOPs2 dAOPs2 = new DAOPs2();
//        String nombre = null;
//        Image img = null;
        int numPS2=0;
        try {
            List<ClPs2> datosCliente = dAOPs2.leerPs2();
            
            for (int i = 0; i < datosCliente.size(); i++) {
//                id = Integer.parseInt(String.valueOf(datosCliente.get(i).getId()));
//                nombre=datosCliente.get(i).getCodigo()+"-"+datosCliente.get(i).getNombre()+".png";
                numPS2=i;
                nombre = datosCliente.get(i).getCodigo() + ".jpg";
                byte[] bi = datosCliente.get(i).getImagen();
                BufferedImage image = null;
                InputStream in = new ByteArrayInputStream(bi);
                image = ImageIO.read(in);
                img = image;
                String aux = nombre;
                StringTokenizer token = new StringTokenizer(aux, ".");
                token.nextToken();
                String formato = token.nextToken();
                ImageIO.write((RenderedImage) img, formato, new File(url+"PS2" + "\\" + nombre));
            }
            DescargaPS2.setText("Descargados "+Integer.toString(numPS2+1));
//            JOptionPane.showMessageDialog(null, "Total De Juegos PS2 descargados "+Integer.toString(numPS2+1));
        } catch (Exception ex) {
            System.out.println(ex.getMessage());
//                Logger.getLogger(FrHome.class.getName()).log(Level.SEVERE, null, ex);
        }
        BarraProgreso(0, 0, cantPSP, 10);
        DAOPsp dAOPsp = new DAOPsp();
//        String nombre = null;
//        Image img = null;
        int numPSP=0;
        try {
            List<ClPsp> datosCliente = dAOPsp.leerPsp();
            
            for (int i = 0; i < datosCliente.size(); i++) {
//                id = Integer.parseInt(String.valueOf(datosCliente.get(i).getId()));
//                nombre=datosCliente.get(i).getCodigo()+"-"+datosCliente.get(i).getNombre()+".png";
                numPSP=i;
                nombre = datosCliente.get(i).getCodigo() + ".jpg";
                byte[] bi = datosCliente.get(i).getImagen();
                BufferedImage image = null;
                InputStream in = new ByteArrayInputStream(bi);
                image = ImageIO.read(in);
                img = image;
                String aux = nombre;
                StringTokenizer token = new StringTokenizer(aux, ".");
                token.nextToken();
                String formato = token.nextToken();
                ImageIO.write((RenderedImage) img, formato, new File(url+"PSP" + "\\" + nombre));
            }
            DescargaPSP.setText("Descargados "+Integer.toString(numPSP+1));
//            JOptionPane.showMessageDialog(null, "Total De Juegos PSP descargados "+Integer.toString(numPSP+1));
        } catch (Exception ex) {
            System.out.println(ex.getMessage());
//                Logger.getLogger(FrHome.class.getName()).log(Level.SEVERE, null, ex);
        }
        BarraProgreso(0, 0, cantPS3, 10);
        DAOPs3 dAOPs3 = new DAOPs3();
//        String nombre = null;
//        Image img = null;
        int numPS3=0;
        try {
            List<ClPs3> datosCliente = dAOPs3.leerPs3();
            
            for (int i = 0; i < datosCliente.size(); i++) {
//                id = Integer.parseInt(String.valueOf(datosCliente.get(i).getId()));
//                nombre=datosCliente.get(i).getCodigo()+"-"+datosCliente.get(i).getNombre()+".png";
                numPS3=i;
                nombre = datosCliente.get(i).getCodigo() + ".jpg";
                byte[] bi = datosCliente.get(i).getImagen();
                BufferedImage image = null;
                InputStream in = new ByteArrayInputStream(bi);
                image = ImageIO.read(in);
                img = image;
                String aux = nombre;
                StringTokenizer token = new StringTokenizer(aux, ".");
                token.nextToken();
                String formato = token.nextToken();
                ImageIO.write((RenderedImage) img, formato, new File(url+"PS3" + "\\" + nombre));
            }
            DescargaPS3.setText("Descargados "+Integer.toString(numPS3+1));
//            JOptionPane.showMessageDialog(null, "Total De Juegos PS3 descargados "+Integer.toString(numPS3+1));
        } catch (Exception ex) {
            System.out.println(ex.getMessage());
//                Logger.getLogger(FrHome.class.getName()).log(Level.SEVERE, null, ex);
        }
        BarraProgreso(0, 0, cantPS4, 10);
        DAOPs4 dAOPs4 = new DAOPs4();
//        String nombre = null;
//        Image img = null;
        int numPS4=0;
        try {
            List<ClPs4> datosCliente = dAOPs4.leerPs4();
            
            for (int i = 0; i < datosCliente.size(); i++) {
//                id = Integer.parseInt(String.valueOf(datosCliente.get(i).getId()));
//                nombre=datosCliente.get(i).getCodigo()+"-"+datosCliente.get(i).getNombre()+".png";
                numPS4=i;
                nombre = datosCliente.get(i).getCodigo() + ".jpg";
                byte[] bi = datosCliente.get(i).getImagen();
                BufferedImage image = null;
                InputStream in = new ByteArrayInputStream(bi);
                image = ImageIO.read(in);
                img = image;
                String aux = nombre;
                StringTokenizer token = new StringTokenizer(aux, ".");
                token.nextToken();
                String formato = token.nextToken();
                ImageIO.write((RenderedImage) img, formato, new File(url+"PS4" + "\\" + nombre));
            }
            DescargaPS3.setText("Descargados "+Integer.toString(numPS4+1));
//            JOptionPane.showMessageDialog(null, "Total De Juegos PS4 descargados "+Integer.toString(numPS4+1));
        } catch (Exception ex) {
            System.out.println(ex.getMessage());
//                Logger.getLogger(FrHome.class.getName()).log(Level.SEVERE, null, ex);
        }
        BarraProgreso(0, 0, cantPC, 10);
        DAOPc dAOpc = new DAOPc();
//        String nombre = null;
//        Image img = null;
        int numPc=0;
        try {
            List<ClPc> datosCliente = dAOPc.leerPc();
            
            for (int i = 0; i < datosCliente.size(); i++) {
//                id = Integer.parseInt(String.valueOf(datosCliente.get(i).getId()));
//                nombre=datosCliente.get(i).getCodigo()+"-"+datosCliente.get(i).getNombre()+".png";
                numPc=i;
                nombre = datosCliente.get(i).getCodigo() + ".jpg";
                byte[] bi = datosCliente.get(i).getImagen();
                BufferedImage image = null;
                InputStream in = new ByteArrayInputStream(bi);
                image = ImageIO.read(in);
                img = image;
                String aux = nombre;
                StringTokenizer token = new StringTokenizer(aux, ".");
                token.nextToken();
                String formato = token.nextToken();
                ImageIO.write((RenderedImage) img, formato, new File(url+"PC" + "\\" + nombre));
            }
            DescargaPC.setText("Descargados "+Integer.toString(numPc+1));
            DescargaAll.setText("Descargados "+Integer.toString(numPSX+numPS2+numPS3+numPSP+numPc+5));
            Directorio.abrirDirecPre();
            JOptionPane.showMessageDialog(null, "Total De Juegos Descargados "+Integer.toString(numPSX+numPS2+numPS3+numPSP+numPc+5));
        } catch (Exception ex) {
            System.out.println(ex.getMessage());
//                Logger.getLogger(FrHome.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        BarraProgreso(0, 0, cantPC, 10);
        DAOPc dAOpc = new DAOPc();
        String nombre = null;
        Image img = null;
        int numPc=0;
        try {
            List<ClPc> datosCliente = dAOPc.leerPc();
            
            for (int i = 0; i < datosCliente.size(); i++) {
//                id = Integer.parseInt(String.valueOf(datosCliente.get(i).getId()));
//                nombre=datosCliente.get(i).getCodigo()+"-"+datosCliente.get(i).getNombre()+".png";
                numPc=i;
                nombre = datosCliente.get(i).getCodigo() + ".jpg";
                byte[] bi = datosCliente.get(i).getImagen();
                BufferedImage image = null;
                InputStream in = new ByteArrayInputStream(bi);
                image = ImageIO.read(in);
                img = image;
                String aux = nombre;
                StringTokenizer token = new StringTokenizer(aux, ".");
                token.nextToken();
                String formato = token.nextToken();
                ImageIO.write((RenderedImage) img, formato, new File(url+"PC" + "\\" + nombre));
            }
            DescargaPC.setText("Descargados "+Integer.toString(numPc+1));
            JOptionPane.showMessageDialog(null, "Total De Juegos PC descargados "+Integer.toString(numPc+1));
        } catch (Exception ex) {
            System.out.println(ex.getMessage());
//                Logger.getLogger(FrHome.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
        BarraProgreso(0, 0, cantPC, 10);
        String url=ApliJuegos.Url;
        String nombreArchivo="Juegos PSX";
        new DAOPsx().CrearTablaPDFPSX(url,nombreArchivo);
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // TODO add your handling code here:
        BarraProgreso(0, 0, cantPC, 10);
        String url=ApliJuegos.Url;
        String nombreArchivo="Juegos PS2";
        new DAOPs2().CrearTablaPDFPS2(url,nombreArchivo);
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        // TODO add your handling code here:
        BarraProgreso(0, 0, cantPC, 10);
        String url=ApliJuegos.Url;
        String nombreArchivo="Juegos PSP";
        new DAOPsp().CrearTablaPDFPSP(url,nombreArchivo);
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        // TODO add your handling code here:
        BarraProgreso(0, 0, cantPC, 10);
        String url=ApliJuegos.Url;
        String nombreArchivo="Juegos PS3";
        new DAOPs3().CrearTablaPDFPS3(url,nombreArchivo);
    }//GEN-LAST:event_jButton10ActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        // TODO add your handling code here:
        BarraProgreso(0, 0, cantPC, 10);
        String url=ApliJuegos.Url;
        String nombreArchivo="Juegos PC";
        new DAOPc().CrearTablaPDFPC(url,nombreArchivo);
    }//GEN-LAST:event_jButton11ActionPerformed

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
        // TODO add your handling code here:
        new FrHome().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton12ActionPerformed

    private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed
        // TODO add your handling code here:
        BarraProgreso(0, 0, cantPS4, 10);
        DAOPs4 dAOPs4 = new DAOPs4();
        String nombre = null;
        Image img = null;
        int numPS4=0;
        try {
            List<ClPs4> datosCliente = dAOPs4.leerPs4();
            
            for (int i = 0; i < datosCliente.size(); i++) {
//                id = Integer.parseInt(String.valueOf(datosCliente.get(i).getId()));
//                nombre=datosCliente.get(i).getCodigo()+"-"+datosCliente.get(i).getNombre()+".png";
                numPS4=i;
                nombre = datosCliente.get(i).getCodigo() + ".jpg";
                byte[] bi = datosCliente.get(i).getImagen();
                BufferedImage image = null;
                InputStream in = new ByteArrayInputStream(bi);
                image = ImageIO.read(in);
                img = image;
                String aux = nombre;
                StringTokenizer token = new StringTokenizer(aux, ".");
                token.nextToken();
                String formato = token.nextToken();
                ImageIO.write((RenderedImage) img, formato, new File(url+"PS4" + "\\" + nombre));
            }
            DescargaPS4.setText("Descargados "+Integer.toString(numPS4+1));
            JOptionPane.showMessageDialog(null, "Total De Juegos PS4 descargados "+Integer.toString(numPS4+1));
        } catch (Exception ex) {
            System.out.println(ex.getMessage());
//                Logger.getLogger(FrHome.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton13ActionPerformed

    private void jButton14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton14ActionPerformed
        // TODO add your handling code here:
        BarraProgreso(0, 0, cantPC, 10);
        String url=ApliJuegos.Url;
        String nombreArchivo="Juegos PS4";
        new DAOPs4().CrearTablaPDFPS4(url,nombreArchivo);
    }//GEN-LAST:event_jButton14ActionPerformed

    public void BarraProgreso(int inicio,int minimo,int maximo,int retraso){
        jProgressBar1.setValue(inicio);
        jProgressBar1.setMaximum(minimo);
        jProgressBar1.setMaximum(maximo);
        HiloPasos.retraso=retraso;
        System.out.println("Retraso "+HiloPasos.retraso);
        System.out.println("Maximo "+jProgressBar1.getMaximum());
        System.out.println("Mimino "+jProgressBar1.getMinimum());
        Thread hilo1 = new HiloPasos(jProgressBar1);
        hilo1.start();
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrDescargarImg.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrDescargarImg.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrDescargarImg.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrDescargarImg.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrDescargarImg().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel DescargaAll;
    private javax.swing.JLabel DescargaPC;
    private javax.swing.JLabel DescargaPS2;
    private javax.swing.JLabel DescargaPS3;
    private javax.swing.JLabel DescargaPS4;
    private javax.swing.JLabel DescargaPSP;
    private javax.swing.JLabel DescargaPSX;
    private javax.swing.JLabel TotalAll;
    private javax.swing.JLabel TotalPC;
    private javax.swing.JLabel TotalPS2;
    private javax.swing.JLabel TotalPS3;
    private javax.swing.JLabel TotalPS4;
    private javax.swing.JLabel TotalPSP;
    private javax.swing.JLabel TotalPSX;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton14;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JProgressBar jProgressBar1;
    // End of variables declaration//GEN-END:variables
}
